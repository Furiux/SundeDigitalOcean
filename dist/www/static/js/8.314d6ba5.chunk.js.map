{"version":3,"sources":["components/Navegation.js","components/ImportRubros.js","components/ImportImgRubros.js","components/DataTableRubros.js","pages/Rubros.js"],"names":["Navegation","uk-sticky","className","uk-navbar","to","uk-toggle","uk-navbar-toggle-icon","uk-tooltip","src","alt","width","uk-icon","connect","state","dispatch","getRubrosActions","fetchRubros","props","useState","isFetching","setFetching","toggle","msg","type","istoggle","setToggle","useDropzone","accept","multiple","onDrop","acceptedFiles","formData","FormData","forEach","a","file","append","axios","post","then","res","setTimeout","data","catch","err","finally","rejectedFiles","getRootProps","getInputProps","isDragActive","acceptedFilesItems","map","key","path","size","rejectedFilesItems","uk-alert","target","download","style","textDecoration","uk-spinner","uk-grid","rubros","array","fetching","tableData","columns","name","selector","sortable","noHeader","defaultSortField","defaultSortAsc","pointerOnHover","pagination","highlightOnHover","uk-tab","id","ImportImgRubros","uk-offcanvas","height"],"mappings":"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","file":"static/js/8.314d6ba5.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Navegation = () => {\r\n  return (\r\n    <Fragment>\r\n      <div uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky; bottom: #transparent-sticky-navbar\">\r\n        <nav className=\"uk-navbar-container uk-padding uk-padding-remove-vertical uk-animation-slide-top-small\" uk-navbar=\"true\">\r\n\r\n            <div className=\"uk-navbar-left\">\r\n              <Link className=\"uk-navbar-toggle\" to=\"#\" uk-toggle=\"target: #offcanvas-nav-primary\">\r\n                  <span uk-navbar-toggle-icon=\"true\" uk-tooltip=\"title: Menú; pos: bottom\"></span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"uk-navbar-center\">\r\n              <Link to=\"#\" className=\"uk-navbar-item uk-logo\">\r\n                <img src=\"static/images/logo.png\" alt=\"logo\" width=\"100\"/>\r\n              </Link>\r\n            </div>\r\n            <div className=\"uk-navbar-right\">\r\n              <ul className=\"uk-iconnav\">\r\n                  <li className=\"uk-margin-small-right\"><Link to=\"#\" uk-icon=\"icon: bell; ratio: 1.2\" uk-tooltip=\"title: Notificaciones; pos: bottom\"></Link></li>\r\n              </ul>\r\n            </div>\r\n\r\n        </nav>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Navegation;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport getRubrosActions from \"../redux/actions/rubrosActions\";\r\n\r\nconst ImportRubros = props => {\r\n  const [isFetching, setFetching] = useState(false);\r\n  const [istoggle, setToggle] = useState({\r\n    toggle: false,\r\n    msg: null,\r\n    type: null\r\n  });\r\n\r\n  const {\r\n    acceptedFiles,\r\n    rejectedFiles,\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive\r\n  } = useDropzone({\r\n    accept: \".xls, .csv, .xlsx\",\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      setToggle({\r\n        toggle: false\r\n      });\r\n      const formData = new FormData();\r\n      acceptedFiles.forEach(async file => {\r\n        formData.append(\"file\", file);\r\n        await axios\r\n          .post(\"https://www.sundelimpieza.com/api/filesRubros/uploadRubros\", formData) // https://www.sundelimpieza.com/api/\r\n          .then(res => {\r\n            \r\n            setFetching(true);\r\n\r\n            setTimeout(() => {\r\n              setToggle({\r\n                toggle: true,\r\n                msg: res.data,\r\n                type: \"uk-alert-success\"\r\n              });\r\n            }, 3000);\r\n\r\n          })\r\n          .catch(err => {\r\n            setToggle({\r\n              toggle: true,\r\n              msg: \"No fue posible realizar la importación\",\r\n              type: \"uk-alert-danger\"\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setFetching(false);\r\n              props.fetchRubros();\r\n            }, 3000);\r\n            \r\n          });\r\n      });\r\n    }\r\n  });\r\n\r\n  const acceptedFilesItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const rejectedFilesItems = rejectedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const { toggle, msg, type } = istoggle;\r\n\r\n  return (\r\n    \r\n    <Fragment>\r\n\r\n      <div className=\"uk-width-1-1 uk-text-center\">\r\n        {toggle && (\r\n          <div className={type + \" uk-alert\"} uk-alert=\"true\">\r\n            <p>{msg}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"uk-alert-warning\" uk-alert=\"true\">\r\n        <Link to=\"static/files/BaseSubRubros.xlsx\" target=\"_blank\" download style={{ textDecoration: 'none' }}>Descargar archivo base para la importación de SubRubros...</Link>\r\n      </div>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div className=\"js-upload uk-placeholder uk-text-center\">\r\n          {isFetching ? (\r\n            <span uk-spinner=\"ratio: 2.3\"></span>\r\n          ) : (\r\n            <span\r\n              className=\"uk-color-pink-bold\"\r\n              uk-icon=\"icon: cloud-upload; ratio: 3.5\"\r\n            ></span>\r\n          )}\r\n          {isDragActive && (\r\n            <h6 className=\"uk-card-title uk-color-pink-bold uk-text-bold\">\r\n              Suelte el achivo aquí...\r\n            </h6>\r\n          )}\r\n          {!isDragActive && (\r\n            <h6 className=\"uk-card-title uk-color-pink-bold uk-text-bold\">\r\n              Arrastre y suelte un archivo aquí..\r\n            </h6>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"uk-grid-collapse uk-child-width-expand@s uk-margin-small-top uk-text-center\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div>\r\n          <p className=\"uk-text-small uk-text-bold uk-margin-small-top\">\r\n            Archivos Aceptados\r\n          </p>\r\n          <ul className=\"uk-list uk-list-large uk-list-divider uk-text-small\">\r\n            {acceptedFilesItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <p className=\"uk-text-small uk-text-bold uk-margin-small-top\">\r\n            Archivos Rechazados\r\n          </p>\r\n          <ul className=\"uk-list uk-list-large uk-list-divider uk-text-small\">\r\n            {rejectedFilesItems}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  dispatch(getRubrosActions);\r\n  return {\r\n    fetchRubros: () => {\r\n      dispatch(getRubrosActions);\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(state => {\r\n  return state;\r\n}, mapDispatchToProps)(ImportRubros);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst ImportRubrosImg = () => {\r\n  const [isFetching, setFetching] = useState(false);\r\n  const [istoggle, setToggle] = useState({\r\n    toggle: false,\r\n    msg: null,\r\n    type: null\r\n  });\r\n\r\n  const {\r\n    acceptedFiles,\r\n    rejectedFiles,\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive\r\n  } = useDropzone({\r\n    accept: \".jpg, .png .jpeg\",\r\n    multiple: true,\r\n    onDrop: acceptedFiles => {\r\n      setToggle({\r\n        toggle: false\r\n      });\r\n      const formData = new FormData();\r\n      acceptedFiles.forEach(async file => {\r\n        formData.append(\"file\", file);\r\n        await axios\r\n          .post(\r\n            \"https://www.sundelimpieza.com/api/imagenes/importar\",\r\n            formData\r\n          ) // https://www.sundelimpieza.com/api/\r\n          .then(res => {\r\n            setFetching(true);\r\n\r\n            setTimeout(() => {\r\n              setToggle({\r\n                toggle: true,\r\n                msg: res.data,\r\n                type: \"uk-alert-success\"\r\n              });\r\n            }, 3000);\r\n          })\r\n          .catch(err => {\r\n            setToggle({\r\n              toggle: true,\r\n              msg: \"No fue posible realizar la importación\",\r\n              type: \"uk-alert-danger\"\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setFetching(false);\r\n            }, 3000);\r\n          });\r\n      });\r\n    }\r\n  });\r\n\r\n  const acceptedFilesItems = acceptedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const rejectedFilesItems = rejectedFiles.map(file => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  const { toggle, msg, type } = istoggle;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"uk-width-1-1 uk-text-center\">\r\n        {toggle && (\r\n          <div className={type + \" uk-alert\"} uk-alert=\"true\">\r\n            <p>{msg}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <div className=\"js-upload uk-placeholder uk-text-center\">\r\n          {isFetching ? (\r\n            <span uk-spinner=\"ratio: 2.3\"></span>\r\n          ) : (\r\n            <span\r\n              className=\"uk-color-pink-bold\"\r\n              uk-icon=\"icon: cloud-upload; ratio: 3.5\"\r\n            ></span>\r\n          )}\r\n          {isDragActive && (\r\n            <h6 className=\"uk-card-title uk-color-pink-bold uk-text-bold\">\r\n              Suelte el achivo aquí...\r\n            </h6>\r\n          )}\r\n          {!isDragActive && (\r\n            <h6 className=\"uk-card-title uk-color-pink-bold uk-text-bold\">\r\n              Arrastre y suelte un archivo aquí..\r\n            </h6>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"uk-grid-collapse uk-child-width-expand@s uk-margin-small-top uk-text-center\"\r\n        uk-grid=\"true\"\r\n      >\r\n        <div>\r\n          <p className=\"uk-text-small uk-text-bold uk-margin-small-top\">\r\n            Archivos Aceptados\r\n          </p>\r\n          <ul className=\"uk-list uk-list-large uk-list-divider uk-text-small\">\r\n            {acceptedFilesItems}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <p className=\"uk-text-small uk-text-bold uk-margin-small-top\">\r\n            Archivos Rechazados\r\n          </p>\r\n          <ul className=\"uk-list uk-list-large uk-list-divider uk-text-small\">\r\n            {rejectedFilesItems}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(state => {\r\n  return state;\r\n})(ImportRubrosImg);\r\n","import React, { Fragment } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\n\r\nimport { connect } from 'react-redux'\r\nimport getRubrosActions from '../redux/actions/rubrosActions'\r\n\r\nconst DataTableRubros = (props) => {\r\n  \r\n  const columns = [\r\n    {\r\n      name: \"FOTO\",\r\n      selector: \"Foto\",\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"SUBRUBRO\",\r\n      selector: \"SubRubro\",\r\n      sortable: true\r\n    }\r\n  ];\r\n\r\n  const tableData = {\r\n    columns,\r\n    data: props.rubros\r\n  };\r\n  \r\n  return (\r\n    <Fragment>\r\n\r\n      { props.fetching ? (<span uk-spinner=\"ratio: 4.5\"></span>) :  \r\n      \r\n      <DataTableExtensions className=\"uk-margin-large-bottom\"\r\n        {...tableData}\r\n      >\r\n      <DataTable\r\n        noHeader={true}\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        pointerOnHover={true}\r\n        pagination\r\n        highlightOnHover\r\n      />\r\n      </DataTableExtensions>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rubros: state.rubros.array,\r\n    fetching: state.rubros.isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  dispatch(getRubrosActions)\r\n  return {\r\n    fetchRubros: () => { dispatch(getRubrosActions) }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DataTableRubros)","import React, { Fragment } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Navegation from '../components/Navegation'\r\nimport ImportRubros from '../components/ImportRubros';\r\nimport ImportImgRubros from '../components/ImportImgRubros';\r\nimport DataTableRubros from '../components/DataTableRubros';\r\n\r\nconst Rubros = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n        <Navegation/>\r\n\r\n        <div className=\"uk-grid-small uk-child-width-expand@s uk-text-center uk-margin-medium uk-padding-remove-vertical uk-animation-fade\" uk-grid=\"true\">\r\n          <div>\r\n            <div className=\"uk-container uk-container-expand\">\r\n              <h2 className=\"uk-margin-small uk-text-uppercase uk-text-bold\">Mis SubRubros</h2>\r\n              <h4 className=\"uk-margin-small\">Gestioná todos tus subrubros sin perder tiempo!..</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"uk-grid uk-child-width-1-1@s uk-text-center uk-padding-large uk-padding-remove-top uk-animation-fade\" uk-grid=\"true\">\r\n          <div>\r\n          <ul className=\"uk-flex-center uk-margin-remove-vertical\" uk-tab=\"connect: #component-tab-left; animation: uk-animation-slide-left-medium, uk-animation-slide-right-medium\">\r\n                  <li className=\"uk-text-bold\"><Link to=\"#\">LISTAR</Link></li>\r\n                  <li className=\"uk-text-bold\"><Link to=\"#\">IMP. Excel</Link></li>\r\n                  <li className=\"uk-text-bold\"><Link to=\"#\">IMP. Imagen</Link></li>\r\n              </ul>\r\n          <div className=\"uk-card uk-card-default uk-card-hover uk-card-body\">\r\n            <ul id=\"component-tab-left\" className=\"uk-switcher\">\r\n                <li><DataTableRubros/></li>\r\n                <li><ImportRubros/></li>\r\n                <li><ImportImgRubros/></li>\r\n            </ul>\r\n          </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"offcanvas-nav-primary\" uk-offcanvas=\"mode: push;overlay: true\">\r\n            <div className=\"uk-offcanvas-bar uk-flex uk-flex-column\">\r\n                <ul className=\"uk-nav uk-nav-primary uk-nav-center uk-margin-auto-vertical\">\r\n                    <li className=\"uk-active\">\r\n                    <img className=\"uk-border-circle uk-padding-small\" src=\"../static/images/avatar.jpg\" width=\"200\" height=\"200\" alt=\"Border circle\"/>\r\n                    </li>\r\n                    <li className=\"uk-nav-header\">Menú</li>\r\n                    <li><Link to=\"#\"> Mi Perfil</Link></li>\r\n                    <li><Link to=\"#\"> Suscripción</Link></li>\r\n                    <li><Link to=\"#\"> Configuración</Link></li>\r\n                    <li className=\"uk-nav-divider\"></li>\r\n                    <li><Link to=\"#\">Cerrar Sesión</Link></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect((state) => {\r\n  return state\r\n})(Rubros)"],"sourceRoot":""}